@import '../../../../common';

:host {
  display: block;
  text-align: start;

  &.global {
    position: fixed;
    top: var(--s);
    left: var(--s);
    right: var(--s);
    overflow: visible;
    transform-origin: left top;

    @include mq(xs, max) {
      transform: translateX(0) !important;
    }

    @include mq(xs) {
      margin-top: 20px;
      max-width: 720px;
      width: 90%;
      top: var(--s6);
      left: 50%;
      right: auto;
      transform: translateX(-50%);
    }
  }
}

:host-context(.isTouchOnly).global {
  top: auto;
  bottom: var(--s);
}

.add-task-container {
  width: 100%;
  position: relative;
  background-color: var(--bg-lighter);
  color: var(--text-color-most-intense);

  box-shadow: var(--whiteframe-shadow-3dp);
  border-radius: var(--card-border-radius);

  &.isElevated {
    box-shadow: var(--whiteframe-shadow-12dp);
  }
}

.input-section {
  position: relative;
  display: flex;
  color: var(--text-color-most-intense);

  .task-input {
    flex: 1;
    display: block;
    width: 100%;
    height: 42px;
    font-size: 16px;
    box-sizing: border-box;
    border-style: solid;
    border-width: 0;
    outline: 0;
    padding-right: 4px;
    padding-left: var(--s2);
    line-height: 42px;
    background: transparent;
    color: inherit;
    font-family: inherit;
  }

  .button-controls {
    margin-left: auto;
    z-index: 2;
    display: flex;
  }

  .separator-box {
    border-right: 1px dashed var(--extra-border-color);
    border-left: 1px dashed var(--extra-border-color);
    border-color: var(--extra-border-color);
  }

  .switch-add-to-btn,
  .switch-add-to-bot-btn {
    opacity: 0.4;

    &:hover {
      opacity: 1;
    }
  }

  .search-toggle-btn {
    opacity: 0.4;

    &:hover {
      opacity: 1;
    }

    &.active {
      opacity: 1;
      background-color: var(--primary-light);
      color: var(--primary);
    }
  }

  .search-input {
    padding-right: 40px; // Make room for spinner
  }
}

.add-issue-info-text {
  height: 38px;
  padding: 0 8px;
  line-height: 38px;
  border-top: 1px dashed var(--extra-border-color);
  color: var(--text-color-muted);

  &.bold {
    opacity: 1;
    color: var(--text-color-most-intense);
    font-weight: bold;
  }
}

.action-bar {
  position: relative;
  padding-top: 0;
  display: flex;
  flex-wrap: wrap;
  border-top: 1px dashed var(--extra-border-color);

  @include mq(xs) {
    gap: 2px;
  }

  .action-btn {
    cursor: pointer;
    opacity: 0.5;
    display: flex;
    align-items: center;

    &.has-value {
      background-color: var(--bg-lightest);
      opacity: 1;
    }

    // Project button is always active since we always have a project selected
    &.project-btn {
      background-color: var(--bg-lightest);
      opacity: 1;
    }

    // Highlight when menu is open
    &.menu-open {
      background-color: rgba(0, 0, 0, 0.05);
      opacity: 1;

      @include darkTheme() {
        background-color: rgba(255, 255, 255, 0.05);
      }

      mat-icon {
        color: inherit;
      }
    }

    .new-tags-indicator {
      font-size: 0.8em;
      font-weight: normal;
      opacity: 0.8;
      margin-left: 4px;
    }

    .tags-display {
      display: flex;
      align-items: center;
      gap: 6px;
      max-width: 240px;
      overflow: hidden;
      position: relative;

      .tag-item {
        display: flex;
        align-items: center;
        gap: 2px;
        flex-shrink: 0;
        min-width: 0;

        &.new-tag {
          .tag-title {
            font-style: italic;
            opacity: 0.8;
          }

          mat-icon {
            color: var(--color-accent);
          }
        }

        mat-icon {
          font-size: 16px;
          width: 16px;
          height: 16px;
          line-height: 16px;
        }

        .tag-title {
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          min-width: 0;
          font-size: 0.9em;
        }

        // Last visible tag gets truncated with ellipsis if needed
        &:last-child .tag-title {
          text-overflow: ellipsis;
        }
      }
    }
  }
}

.spinner {
  animation: 200ms fadeIn;
  position: absolute;
  right: 50%;
  top: 100%;
  transform: translateX(-50%);
  z-index: 333333;
  border-radius: 50%;
  background: var(--card-bg);
  padding: 6px;
  margin-top: 4px;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.clear-btn {
  opacity: 0.5;
  border-radius: 4px !important;
  margin-left: -8px;
  min-width: 32px;
  padding: 0;
  text-align: center;
  display: flex;
  justify-content: center;

  @include mq(xs) {
    margin-left: -8px;
  }

  mat-icon {
    margin: 0;
  }

  &:hover {
    opacity: 1;
  }
}

//// Autocomplete panel styles
::ng-deep .add-task-bar-panel {
  position: absolute;
  padding: 0 !important;
  top: 40px;

  .mat-mdc-option {
    display: flex;
    align-items: center;
    gap: 8px;

    .project-icon {
      font-size: 16px;
      width: 16px;
      height: 16px;
      margin-left: 8px;
      opacity: 0.7;
      margin-right: 0;
    }

    .project-title {
      opacity: 0.7;
      font-size: 0.9em;
      margin-left: 4px;
    }

    mat-icon:first-child {
      margin-right: 0;
      flex-shrink: 0;
    }
  }

  .suggestion-option {
    min-height: 48px;
    padding: 8px 16px;

    .option-content {
      display: flex;
      align-items: center;
      gap: 8px;
      width: 100%;

      .option-icon {
        flex-shrink: 0;
        color: var(--text-color-dimmed);

        &.archived {
          color: var(--color-accent);
        }
      }

      .option-title {
        flex: 1;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      .issue-id {
        flex-shrink: 0;
        font-size: 0.9em;
        color: var(--text-color-dimmed);
        opacity: 0.7;
      }
    }
  }
}
